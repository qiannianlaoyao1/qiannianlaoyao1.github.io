<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>qiannianlaoyao&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.qnlywhd.top/"/>
  <updated>2018-11-30T13:49:46.304Z</updated>
  <id>http://www.qnlywhd.top/</id>
  
  <author>
    <name>王浩东</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一道特别有想法的题</title>
    <link href="http://www.qnlywhd.top/2018/11/30/%E4%B8%80%E9%81%93%E7%89%B9%E5%88%AB%E6%9C%89%E6%83%B3%E6%B3%95%E7%9A%84%E9%A2%98/"/>
    <id>http://www.qnlywhd.top/2018/11/30/一道特别有想法的题/</id>
    <published>2018-11-30T13:00:16.000Z</published>
    <updated>2018-11-30T13:49:46.304Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><ol><li>初级：给定一段序列，序列的长度范围是1e5的，每个数的范围是正负1e9的，然后给出一个数值x，要你求这个序列里面一段连续的和且和的值为x，并且序列的长度越大越好</li><li>进阶：对于这个序列给出的数a[i]，只有0和1构成，求的是一段连续的区间里面的0和1的个数是相同的，并且长度越大越好</li><li>最终：对于这个序列给出的数可以是正负1e9的，然后求得还是一段连续的区间里面的0和1的个数是相同的，并且长度越大越好</li></ol><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><ol><li><p>初级： 对于这个序列我们可以想到要找两个位置，<strong>i和j</strong>，i到j里面的和是x对吧，当然我们不能暴力的枚举两个位置，这样一定超时，我们可以发现可以用一个前缀和来优化求和的过程对吧，对于i到j的和不就是 <strong>sum[j]-sum[i]</strong>，sum代表前缀和，然而我们可以发现，我们需要的只是sum[i]的位置，这个位置我们也可以预处理一下，用一个map来表示前缀和这个数<strong>第一次</strong>出现的位置，这里为什么是第一次呢后面会再说。</p><p>​    然后对于这个序列我们先从前往后遍历不断累加一个和 sums 然后如果满足条件的话，一定有一个位置i从i到现在的sums 的位置也就是j 满足 <strong>sum[j]-sum[i] = x</strong> ，然而我们已经用map记录过</p><p>所以直接判断是不是出现过即可，出现过的话在更新一下最大长度即可</p><p>​    举个例子为什么是map只记录第一次的位置 比如 序列是 <code>2 3 -3</code>  这个时候前缀和是<code>2 5 2</code> 为什么只记录第一次呢，因为我们是从前往后遍历序列对吧，只记录第一次的位置这样保证长度一定是最长的！</p></li><li><p>进阶：其实我们可以根据上面的题来想想，如果我们把所有的0都换成-1，那么问题不就变成了给定序列找一段连续的和为0，并且长度最大吗？，问题解决了</p></li><li><p>最终：其实这个思路和上面的也是一样的，我们对于别的数字我们不看，对于我们有影响的只是0和1对吧，我们就在这里面看就可以，然后还是把0改成-1，然后就可以了</p></li></ol><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span>,<span class="keyword">int</span>&gt;m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    LL x;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%lld"</span>,&amp;n,&amp;x)==<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        m.clear();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        m[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">        LL sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum+=a[i];</span><br><span class="line">            <span class="keyword">if</span>(m[sum]!=<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> m[sum] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum+=a[i];</span><br><span class="line">            <span class="keyword">if</span>(m[sum-x]!=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(m[sum-x]==<span class="number">-1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    len = max(len,i);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> len = max(len,i-m[sum-x]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,len);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>接下来的代码和上面的都差不多 就是无非把序列的数改一改，就不在赘述</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;初级：给定一段序列，序列的长度范围是1e5的，每个数的范围是正负1e9的，然后给出一个数值x，要你求这个序列里面一段连续的和且和
      
    
    </summary>
    
      <category term="ACM" scheme="http://www.qnlywhd.top/categories/ACM/"/>
    
    
      <category term="思维" scheme="http://www.qnlywhd.top/tags/%E6%80%9D%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.qnlywhd.top/2018/11/28/hello-world/"/>
    <id>http://www.qnlywhd.top/2018/11/28/hello-world/</id>
    <published>2018-11-28T11:23:22.782Z</published>
    <updated>2018-11-28T11:23:22.782Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hdu 4553</title>
    <link href="http://www.qnlywhd.top/2018/11/28/hdu-4553/"/>
    <id>http://www.qnlywhd.top/2018/11/28/hdu-4553/</id>
    <published>2018-11-28T11:20:24.000Z</published>
    <updated>2018-11-28T13:59:09.359Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/11/28/hdu-4553/1.png" alt=""></p><a id="more"></a><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4553" target="_blank" rel="noopener">题目链接 </a></p><p><img src="/2018/11/28/hdu-4553/2.png" alt=""></p><p><img src="/2018/11/28/hdu-4553/3.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>​    </p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>​     </p><h2 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a</span><br></pre></td></tr></table></figure><p><a href="http://www.qnlywhd.top/">作者拥有版权，请注明出处转载！</a></p><p>如果觉得有什么疑惑或者博主代码有什么问题，可以通过关于我，加我QQ联系 ，感谢。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2018/11/28/hdu-4553/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://www.qnlywhd.top/categories/ACM/"/>
    
    
      <category term="-线段树" scheme="http://www.qnlywhd.top/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>HDU 3308 (线段树合并 求最大连续上升序列)</title>
    <link href="http://www.qnlywhd.top/2018/11/27/HDU-3308-%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%90%88%E5%B9%B6-%E6%B1%82%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%AD%90%E4%B8%B2/"/>
    <id>http://www.qnlywhd.top/2018/11/27/HDU-3308-线段树合并-求最大连续子串/</id>
    <published>2018-11-27T14:00:31.000Z</published>
    <updated>2018-11-28T11:06:37.446Z</updated>
    
    <content type="html"><![CDATA[<center><img src="/2018/11/27/HDU-3308-线段树合并-求最大连续子串/3.png" alt=""></center><a id="more"></a><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3308" target="_blank" rel="noopener">题目链接 </a></p><p><img src="/2018/11/27/HDU-3308-线段树合并-求最大连续子串/1.png" alt=""></p><p><img src="/2018/11/27/HDU-3308-线段树合并-求最大连续子串/2.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>​    给定一段区间求 最长连续上升序列长度  </p><p>​    两个操作 Q 操作区间查询最长连续上升子序列 U操作 单点更新</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>​     一般的区间合并问题，我算是发现了，都要维护三个基本参数</p><p>​    从左端开始的  从右端开始的  中间最大的</p><p>​    所以这个题 也不例外 维护左端开始的最长 和右端结束的最长 还有区间最长</p><p>​    然后 在记录一下这个区间的左右端点值 在合并的时候 需要比较</p><p>​    主要是如何pushup 首先往上更新的时候 最长的肯定是左右的最大的</p><p>​    然后 左端 判断是否贯穿 贯穿就是 左儿子右端点大于 右儿子左端点 这个时候</p><p>​    左端连续 要加上右儿子的左端连续</p><p>​    同理 右端连续也是这样 然后就可以了</p><p>​    然后 查找的时候 同样遵守之前的道理 你的区间要是分开的时候要判断一下</p><p>​    你分开的区间 左儿子的右端点和右儿子的左端点的大小比较一下</p><p>​    如果可以连续  我们比较一下 左右儿子的最大和 还有这个区间大小 </p><p>​    就是你不能超过这个区间的大小和之前的找01 最长1的那个是一个道理 </p><p>​    然后比较一个最大值就可以了</p><p>ps : 总感觉最正统的线段树往下递归的时候 都应该分三个写诶 以前两个的写法有点偷懒</p><h2 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    <span class="keyword">int</span> ls,rs;</span><br><span class="line">    <span class="keyword">int</span> lsum,rsum,sumb;</span><br><span class="line">&#125;;</span><br><span class="line">node shu[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    shu[rt].ls = shu[rt&lt;&lt;<span class="number">1</span>].ls;</span><br><span class="line">    shu[rt].rs = shu[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].rs;</span><br><span class="line">    shu[rt].sumb = max(shu[rt&lt;&lt;<span class="number">1</span>].sumb,shu[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].sumb);</span><br><span class="line">    <span class="keyword">if</span>(shu[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].ls&gt;shu[rt&lt;&lt;<span class="number">1</span>].rs)</span><br><span class="line">    &#123;</span><br><span class="line">        shu[rt].sumb = max(shu[rt].sumb,(shu[rt&lt;&lt;<span class="number">1</span>].rsum + shu[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].lsum));</span><br><span class="line">    &#125;</span><br><span class="line">    shu[rt].lsum = shu[rt&lt;&lt;<span class="number">1</span>].lsum;</span><br><span class="line">    <span class="keyword">if</span>(shu[rt].lsum == (shu[rt&lt;&lt;<span class="number">1</span>].r - shu[rt&lt;&lt;<span class="number">1</span>].l+<span class="number">1</span>) &amp;&amp; shu[rt&lt;&lt;<span class="number">1</span>].rs&lt;shu[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].ls)</span><br><span class="line">    &#123;</span><br><span class="line">        shu[rt].lsum += shu[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].lsum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    shu[rt].rsum = shu[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].rsum;</span><br><span class="line">    <span class="keyword">if</span>(shu[rt].rsum == (shu[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].r - shu[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].l+<span class="number">1</span>) &amp;&amp; shu[rt&lt;&lt;<span class="number">1</span>].rs&lt;shu[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].ls)</span><br><span class="line">    &#123;</span><br><span class="line">        shu[rt].rsum += shu[rt&lt;&lt;<span class="number">1</span>].rsum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    shu[rt].l = l,shu[rt].r = r;</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">    &#123;</span><br><span class="line">        shu[rt].ls = shu[rt].rs = a[l];</span><br><span class="line">        shu[rt].lsum = shu[rt].rsum = shu[rt].sumb = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(rt&lt;&lt;<span class="number">1</span>,l,mid);</span><br><span class="line">    build(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">    pushup(rt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> L = shu[rt].l ,R = shu[rt].r;</span><br><span class="line">    <span class="keyword">if</span>(L==R&amp;&amp;L==pos)</span><br><span class="line">    &#123;</span><br><span class="line">        shu[rt].ls = shu[rt].rs = val;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (L+R)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(pos&lt;=mid) update(rt&lt;&lt;<span class="number">1</span>,pos,val);</span><br><span class="line">    <span class="keyword">else</span> update(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,pos,val);</span><br><span class="line">    pushup(rt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> L = shu[rt].l, R = shu[rt].r;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=L&amp;&amp;R&lt;=r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> shu[rt].sumb;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> mid = (L+R)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=mid) ans = max(ans,Find(rt&lt;&lt;<span class="number">1</span>,l,r));</span><br><span class="line">    <span class="keyword">if</span>(r&gt;mid) ans = max(ans,Find(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r));</span><br><span class="line">    <span class="keyword">if</span>(shu[rt&lt;&lt;<span class="number">1</span>].rs &lt; shu[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].ls &amp;&amp; l&lt;=mid &amp;&amp; r&gt;mid )</span><br><span class="line">    &#123;</span><br><span class="line">        ans = max(ans , (min(shu[rt&lt;&lt;<span class="number">1</span>].rsum,mid-l+<span class="number">1</span>)+min(shu[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].lsum,r-mid)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n,m;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(shu,<span class="number">0</span>,<span class="keyword">sizeof</span>(shu));</span><br><span class="line">        build(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">        <span class="keyword">while</span>(m--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> s1[<span class="number">10</span>];</span><br><span class="line">            <span class="keyword">int</span> l,r;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s%d%d"</span>,s1,&amp;l,&amp;r);</span><br><span class="line">            <span class="keyword">if</span>(s1[<span class="number">0</span>]==<span class="string">'Q'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                l++,r++;</span><br><span class="line">                <span class="keyword">int</span> x1 = Find(<span class="number">1</span>,l,r);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x1);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                l++;</span><br><span class="line">                update(<span class="number">1</span>,l,r);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://www.qnlywhd.top/">作者拥有版权，请注明出处转载！</a></p><p>如果觉得有什么疑惑或者博主代码有什么问题，可以通过关于我，加我QQ联系 ，感谢。</p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;/2018/11/27/HDU-3308-线段树合并-求最大连续子串/3.png&quot; alt=&quot;&quot;&gt;&lt;/center&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://www.qnlywhd.top/categories/ACM/"/>
    
    
      <category term="线段树" scheme="http://www.qnlywhd.top/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
</feed>
